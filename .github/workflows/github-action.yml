name: Java CI with Gradle + S3 + EC2 Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3.1.0

      - name: Create application-test.properties for test
        run: |
          mkdir -p src/test/resources
          echo "spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;MODE=MYSQL" >> src/test/resources/application-test.properties
          echo "spring.datasource.driver-class-name=org.h2.Driver" >> src/test/resources/application-test.properties
          echo "spring.datasource.username=sa" >> src/test/resources/application-test.properties
          echo "spring.datasource.password=" >> src/test/resources/application-test.properties
          echo "spring.jpa.hibernate.ddl-auto=create" >> src/test/resources/application-test.properties
          echo "spring.jpa.show-sql=true" >> src/test/resources/application-test.properties
          echo "spring.jpa.properties.hibernate.format_sql=true" >> src/test/resources/application-test.properties
          echo "spring.jpa.database-platform=org.hibernate.dialect.H2Dialect" >> src/test/resources/application-test.properties
          echo "spring.security.oauth2.client.registration.google.client-id=dummy-client-id" >> src/test/resources/application-test.properties
          echo "spring.security.oauth2.client.registration.google.client-secret=dummy-client-secret" >> src/test/resources/application-test.properties
          echo "AWS_S3_BUCKET=dummy-bucket" >> src/test/resources/application-test.properties
          echo "AWS_CREDENTIALS_ACCESS_KEY=dummy-access-key" >> src/test/resources/application-test.properties
          echo "AWS_CREDENTIALS_SECRET_KEY=dummy-secret-key" >> src/test/resources/application-test.properties
          echo "AWS_REGION_STATIC=ap-northeast-2" >> src/test/resources/application-test.properties
          echo "allen.api.url=http://localhost:8080/dummy-allen-api" >> src/test/resources/application-test.properties
      - name: Build
        run: ./gradlew build
        env:
          AWS_S3_BUCKET: dummy-bucket
          AWS_CREDENTIALS_ACCESS_KEY: dummy-access-key
          AWS_CREDENTIALS_SECRET_KEY: dummy-secret-key
          AWS_REGION_STATIC: ap-northeast-2
          SPRING_PROFILES_ACTIVE: test


      - name: Upload test report if tests fail
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: build/reports/tests/test/index.html

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload JAR to S3
        run: aws s3 cp build/libs/project3-0.0.1-SNAPSHOT.jar s3://${{ secrets.S3_BUCKET_NAME }}/project3-0.0.1-SNAPSHOT.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: SSH to EC2 and restart Spring Boot using systemd
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            export AWS_CREDENTIALS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY_ID }}
            export AWS_CREDENTIALS_SECRET_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            export AWS_REGION_STATIC=ap-northeast-2
            export AWS_S3_BUCKET=${{ secrets.S3_BUCKET_NAME }}
            sudo yum install -y aws-cli
            mkdir -p /home/ec2-user/app
            aws s3 cp s3://${{ secrets.S3_BUCKET_NAME }}/project3-0.0.1-SNAPSHOT.jar /home/ec2-user/app/app.jar
            sudo systemctl daemon-reexec
            sudo systemctl restart allen
